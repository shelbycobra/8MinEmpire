1. (DONE) Add image loading function in MapLoader
2. (DONE) Add image in got.text
3. (DONE) Create test cases for MapLoader (bad text files)
4. (DONE) Create test cases for Cards
5. Complete test suite for Player
6. Documentation (diagram?)
7. README
8. (NO NEED) Windows option in run_driver
9. Method Documentation
10. (DONE) Bidder tester
11. (DONE) Copy constructor and assignment constructors
11. (DONE) memory leaks
12. (DONE) Default constructors
13. (DONE) Add test headers in MapDriver.cpp

Questions

2. Hand exchange method: Is it supposed to act upon a player object causing it?
3. Does the naming have to be exactly as the requirements?
4. Does each cpp file have to be a class? or can they be just methods?
5. CardsDriver test cases?


2. The assignment requirements seem to make it sound like it should be inside the exchange()
function! I hope this won't cause too much refactoring!

6. Since this is not really the full-fledged game with its gaming loop, we expect just enough interaction
to show the proper functionalities of each part! It does not have to be super elaborate, but should have some
depth to properly represent what's being asked from the drivers to demonstrate the functionality of its corresponding part.

7. What we, or more specifically, I want from the documentation (the README), is an explanation of the
design decisions you've made. I'm not expecting it to be very long either. In an ideal setting, it would
be an elaborate Game Design Document, but this is not exactly a game design class per se. So, I expect
the names of each member, their IDs, and just a general explanation of what the classes are/will be doing.
Do not waste too much time on this! It is not really a priority, but does need to exist. So again, just keep it short!